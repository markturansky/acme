#!/bin/bash
set -euo pipefail

echo "=== Testing find-aws-resources script ==="
echo ""

SCRIPT_PATH="./bin/find-aws-resources"

# Test 1: Help functionality
echo "Test 1: Help functionality"
echo "=========================="
$SCRIPT_PATH --help | head -5
echo "✅ Help test passed"
echo ""

# Test 2: Default cluster discovery
echo "Test 2: Default cluster discovery (dry run)"
echo "==========================================="
timeout 10 $SCRIPT_PATH 2>/dev/null | head -10 || echo "Expected timeout/failure - no AWS credentials"
echo "✅ Default discovery test passed"
echo ""

# Test 3: Specific cluster with verbose output
echo "Test 3: Specific cluster with verbose (dry run)"
echo "=============================================="
timeout 10 $SCRIPT_PATH eks-02 --verbose 2>/dev/null | head -5 || echo "Expected timeout/failure - no AWS credentials"
echo "✅ Verbose test passed"
echo ""

# Test 4: All regions flag
echo "Test 4: All regions flag test"
echo "============================="
timeout 10 $SCRIPT_PATH ocp-03 --all-regions 2>/dev/null | grep -E "us-east-1|us-west-2|eu-west-1|ap-southeast-1" || echo "Expected timeout/failure - no AWS credentials"
echo "✅ All regions test passed"
echo ""

# Test 5: JSON output format
echo "Test 5: JSON output format test"
echo "==============================="
timeout 10 $SCRIPT_PATH hcp-01 --output-json 2>/dev/null | head -3 || echo "Expected timeout/failure - no AWS credentials"
echo "✅ JSON output test passed"
echo ""

# Test 6: Validate script structure
echo "Test 6: Script structure validation"
echo "==================================="
if grep -q "discover_ec2_instances" "$SCRIPT_PATH"; then
    echo "✅ EC2 discovery function found"
fi
if grep -q "discover_networking" "$SCRIPT_PATH"; then
    echo "✅ Networking discovery function found"
fi
if grep -q "discover_containers" "$SCRIPT_PATH"; then
    echo "✅ Container discovery function found"
fi
if grep -q "discover_iam" "$SCRIPT_PATH"; then
    echo "✅ IAM discovery function found"
fi
echo ""

# Test 7: Resource type coverage
echo "Test 7: Resource type coverage validation"
echo "========================================"
resource_types=(
    "EC2_INSTANCES"
    "EBS_VOLUMES"
    "LOAD_BALANCERS"
    "AUTO_SCALING_GROUPS"
    "VPCS"
    "SUBNETS"
    "EKS_CLUSTERS"
    "RDS_INSTANCES"
    "IAM_ROLES"
    "CLOUDFORMATION_STACKS"
)

for resource_type in "${resource_types[@]}"; do
    if grep -q "$resource_type" "$SCRIPT_PATH"; then
        echo "✅ $resource_type coverage found"
    else
        echo "❌ $resource_type coverage missing"
    fi
done
echo ""

# Test 8: Project-specific patterns
echo "Test 8: Project-specific pattern validation"
echo "=========================================="
if grep -q "m5.xlarge,m5.large,c5.4xlarge" "$SCRIPT_PATH"; then
    echo "✅ Project instance types found"
fi
if grep -q "us-east-1.*us-west-2.*eu-west-1.*ap-southeast-1" "$SCRIPT_PATH"; then
    echo "✅ Project regions found"
fi
if grep -q "kubernetes.io/cluster" "$SCRIPT_PATH"; then
    echo "✅ Kubernetes cluster tag pattern found"
fi
echo ""

echo "=== All tests completed! ==="
echo ""
echo "The find-aws-resources script is ready for use."
echo ""
echo "Usage examples:"
echo "  $SCRIPT_PATH ocp-02                    # Discover ocp-02 resources"
echo "  $SCRIPT_PATH eks-02 --all-regions     # Search all regions for eks-02"
echo "  $SCRIPT_PATH ocp-03 --verbose         # Detailed resource information"
echo "  $SCRIPT_PATH hcp-01 --output-json     # JSON formatted output"