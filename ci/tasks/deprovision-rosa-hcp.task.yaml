apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: deprovision-rosa-hcp
spec:
  params:
    - name: aws-secret
      type: string
    - name: rosa-token-secret
      type: string
    - name: cluster-name
      type: string
    - name: region
      type: string
  steps:
    - name: deprovision-rosa-hcp-cluster
      image: registry.redhat.io/ubi9-minimal:latest
      env:
        - name: AWS_ACCESS_KEY_ID
          valueFrom:
            secretKeyRef:
              name: $(params.aws-secret)
              key: "aws-access-key-id"
        - name: AWS_SECRET_ACCESS_KEY
          valueFrom:
            secretKeyRef:
              name: $(params.aws-secret)
              key: "aws-secret-access-key"
        - name: ROSA_TOKEN
          valueFrom:
            secretKeyRef:
              name: $(params.rosa-token-secret)
              key: "rosa-token"
      script: |        # Install Dependencies
        microdnf install unzip wget tar gzip -y

        # Install AWS CLI
        curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
        unzip awscliv2.zip
        ./aws/install
        rm -rf awscliv2.zip

        # Install rosa CLI
        wget https://mirror.openshift.com/pub/openshift-v4/x86_64/clients/rosa/latest/rosa-linux.tar.gz && \
          tar xzf ./rosa-linux.tar.gz --no-same-owner && \
          mv rosa /usr/local/bin/rosa && \
          rm -rf rosa-linux.tar.gz
        
        # Configure AWS CLI
        aws configure set aws_access_key_id $AWS_ACCESS_KEY_ID
        aws configure set aws_secret_access_key $AWS_SECRET_ACCESS_KEY
        aws configure set region $(params.region)

        # Log-in to ROSA CLI and Provision Cluster
        rosa login --token $ROSA_TOKEN
        rosa delete cluster --cluster=$(params.cluster-name) \
          --region $(params.region) \
          --yes
        # Watch for deploy to succeed
        rosa logs install -c gurnben-test --watch