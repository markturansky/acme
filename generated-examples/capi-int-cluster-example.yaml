# example generated by gemini
# integration-cluster.yaml
---
apiVersion: cluster.x-k8s.io/v1beta1
kind: Cluster
metadata:
  name: integration-cluster
  namespace: default # Or your desired namespace
spec:
  clusterNetwork:
    pods:
      cidrBlocks:
        - 192.168.0.0/16
    services:
      cidrBlocks:
        - 10.96.0.0/12
  controlPlaneRef:
    apiVersion: controlplane.cluster.x-k8s.io/v1beta1
    kind: KubeadmControlPlane
    name: integration-cluster-kcp
  infrastructureRef:
    apiVersion: infrastructure.cluster.x-k8s.io/v1beta1
    kind: AWSCluster
    name: integration-cluster-aws

---
apiVersion: infrastructure.cluster.x-k8s.io/v1beta1
kind: AWSCluster
metadata:
  name: integration-cluster-aws
  namespace: default
spec:
  region: us-east-1 # Change to your desired AWS region
  sshKeyName: capi-key # Replace with your SSH key pair name in AWS
  # You might want to define a specific VPC and subnets here,
  # or let CAPI create them. For simplicity, we let CAPI create.
  networkSpec:
    cni:
      cniPlugin: calico # Or cilium, amazon-vpc-cni, etc.
    # We will let CAPI create a new VPC and subnets for simplicity.
    # For production, you might want to reference existing network resources.
    # vpc:
    #   id: vpc-xxxxxxxxxxxxxxxxx
    # subnets:
    #   - id: subnet-xxxxxxxxxxxxxxxxx
    #     availabilityZone: us-east-1a
    #   - id: subnet-xxxxxxxxxxxxxxxxx
    #     availabilityZone: us-east-1b
    #   - id: subnet-xxxxxxxxxxxxxxxxx
    #     availabilityZone: us-east-1c
---
apiVersion: controlplane.cluster.x-k8s.io/v1beta1
kind: KubeadmControlPlane
metadata:
  name: integration-cluster-kcp
  namespace: default
spec:
  replicas: 3 # For high availability in a medium-sized cluster
  version: v1.28.3 # Specify your desired Kubernetes version
  kubeadmConfigSpec:
    clusterConfiguration:
      controllerManager:
        extraArgs:
          bind-address: 0.0.0.0
      scheduler:
        extraArgs:
          bind-address: 0.0.0.0
    initConfiguration:
      nodeRegistration:
        kubeletExtraArgs:
          cloud-provider: aws
    joinConfiguration:
      nodeRegistration:
        kubeletExtraArgs:
          cloud-provider: aws
  machineTemplate:
    infrastructureRef:
      apiVersion: infrastructure.cluster.x-k8s.io/v1beta1
      kind: AWSMachineTemplate
      name: integration-cluster-control-plane-machine-template
---
apiVersion: infrastructure.cluster.x-k8s.io/v1beta1
kind: AWSMachineTemplate
metadata:
  name: integration-cluster-control-plane-machine-template
  namespace: default
spec:
  template:
    spec:
      instanceType: m5.xlarge # Medium size instance type
      ami:
        id: ami-0abcdef1234567890 # Replace with a valid CAPI-compatible Kubernetes AMI for your region and K8s version
      sshKeyName: capi-key # Replace with your SSH key pair name
---
apiVersion: cluster.x-k8s.io/v1beta1
kind: MachineDeployment
metadata:
  name: integration-cluster-md-0
  namespace: default
spec:
  clusterName: integration-cluster
  replicas: 3 # Starting with 3 worker nodes for a medium-sized cluster
  selector:
    matchLabels: null
  template:
    spec:
      bootstrap:
        configRef:
          apiVersion: bootstrap.cluster.x-k8s.io/v1beta1
          kind: KubeadmConfigTemplate
          name: integration-cluster-md-0-kct
      clusterName: integration-cluster
      version: v1.28.3 # Must match control plane Kubernetes version
      infrastructureRef:
        apiVersion: infrastructure.cluster.x-k8s.io/v1beta1
        kind: AWSMachineTemplate
        name: integration-cluster-md-0-amt
---
apiVersion: infrastructure.cluster.x-k8s.io/v1beta1
kind: AWSMachineTemplate
metadata:
  name: integration-cluster-md-0-amt
  namespace: default
spec:
  template:
    spec:
      instanceType: m5.xlarge # Medium size instance type for worker nodes
      ami:
        id: ami-0abcdef1234567890 # Replace with a valid CAPI-compatible Kubernetes AMI for your region and K8s version
      sshKeyName: capi-key # Replace with your SSH key pair name
---
apiVersion: bootstrap.cluster.x-k8s.io/v1beta1
kind: KubeadmConfigTemplate
metadata:
  name: integration-cluster-md-0-kct
  namespace: default
spec:
  template:
    spec:
      joinConfiguration:
        nodeRegistration:
          kubeletExtraArgs:
            cloud-provider: aws
